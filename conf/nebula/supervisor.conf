[unix_http_server]
file=/var/run/supervisor/supervisor.sock   ; (the path to the socket file)

[supervisord]
logfile=/var/log/supervisor/supervisord.log  ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB       ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10          ; (num of main logfile rotation backups;default 10)
loglevel=info               ; (log level;default info; others: debug,warn,trace)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=true              ; (start in foreground if true;default false)
minfds=1024                 ; (min. avail startup file descriptors;default 1024)
minprocs=200                ; (min. avail process descriptors;default 200)

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor/supervisor.sock ; use a unix:// URL  for a unix socket

[include]
files = /etc/supervisord.d/*.ini

[group:nebula]
programs=nebula_web,nebula_db_query_web,nebula_query_web,incident_babel_db_writer,notice_babel_db_writer,nebula_online,nebula_offline
priority=900

[program:nebula_web]
command=python admin.py webui --port 9002              ; the program (relative uses PATH, can take args)
directory=/home/threathunter/nebula/nebula_web              ; directory to cwd to before exec (def no cwd)
autorestart=true               ; whether/when to restart (default: unexpected)
stopasgroup=true            ; send stop signal to the UNIX process group (default false)
killasgroup=true             ; SIGKILL the UNIX process group (def false)
user=root        ; setuid to this UNIX account to run the program
stdout_logfile=/data/logs/web/log.txt        ; stdout log path, NONE for none; default AUTO
stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_logfile=/data/logs/web/err.txt        ; stderr log path, NONE for none; default AUTO
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
priority=980                  ; the relative start priority (default 999)

[program:nebula_db_query_web]
command=uwsgi db_query_web.ini             ; the program (relative uses PATH, can take args)
directory=/home/threathunter/nebula/nebula_query_web                ; directory to cwd to before exec (def no cwd)
autorestart=true               ; whether/when to restart (default: unexpected)
stopasgroup=true             ; send stop signal to the UNIX process group (default false)
killasgroup=true             ; SIGKILL the UNIX process group (def false)
user=root ; setuid to this UNIX account to run the program
priority=999                  ; the relative start priority (default 999)

[program:nebula_query_web]
command=uwsgi query_web.ini             ; the program (relative uses PATH, can take args)
directory=/home/threathunter/nebula/nebula_query_web                ; directory to cwd to before exec (def no cwd)
autorestart=true               ; whether/when to restart (default: unexpected)
stopasgroup=true             ; send stop signal to the UNIX process group (default false)
killasgroup=true             ; SIGKILL the UNIX process group (def false)
user=root ; setuid to this UNIX account to run the program
stdout_logfile=/data/logs/query_web/nebula.log        ; stdout log path, NONE for none; default AUTO
stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
priority=999                  ; the relative start priority (default 999)

[program:nebula_online]
command=/home/threathunter/nebula/nebula-onlineserver/start_sync.sh start            ; the program (relative uses PATH, can take args)
directory=/home/threathunter/nebula/nebula-onlineserver                ; directory to cwd to before exec (def no cwd)
autorestart=true               ; whether/when to restart (default: unexpected)
stopasgroup=true             ; send stop signal to the UNIX process group (default false)
killasgroup=true             ; SIGKILL the UNIX process group (def false)
user=root        ; setuid to this UNIX account to run the program
stdout_logfile=/data/logs/online/online-1.stdout.log        ; stdout log path, NONE for none; default AUTO
stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_logfile=/data/logs/online/online-1.stderr.log        ; stderr log path, NONE for none; default AUTO
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
priority=990                  ; the relative start priority (default 999)

[program:nebula_offline]
command=/home/threathunter/nebula/nebula_offline_slot/query_start_sync.sh start            ; the program (relative uses PATH, can take args)
directory=/home/threathunter/nebula/nebula_offline_slot                ; directory to cwd to before exec (def no cwd)
autorestart=true               ; whether/when to restart (default: unexpected)
stopasgroup=true             ; send stop signal to the UNIX process group (default false)
killasgroup=true             ; SIGKILL the UNIX process group (def false)
user=root        ; setuid to this UNIX account to run the program
stdout_logfile=/data/logs/offline/query_log.txt        ; stdout log path, NONE for none; default AUTO
stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_logfile=/data/logs/offline/query_err.txt        ; stderr log path, NONE for none; default AUTO
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
priority=990                  ; the relative start priority (default 999)

[program:incident_babel_db_writer]
command=python db_writer.py incident             ; the program (relative uses PATH, can take args)
directory=/home/threathunter/nebula/nebula_db_writer                ; directory to cwd to before exec (def no cwd)
autorestart=true               ; whether/when to restart (default: unexpected)
stopasgroup=true             ; send stop signal to the UNIX process group (default false)
killasgroup=true             ; SIGKILL the UNIX process group (def false)
user=root ; setuid to this UNIX account to run the program
stdout_logfile=/data/logs/db_writer/incident_log.txt        ; stdout log path, NONE for none; default AUTO
stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_logfile=/data/logs/db_writer/incident_err.txt        ; stderr log path, NONE for none; default AUTO
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
priority=999                  ; the relative start priority (default 999)

[program:notice_babel_db_writer]
command=python db_writer.py notice             ; the program (relative uses PATH, can take args)
directory=/home/threathunter/nebula/nebula_db_writer                ; directory to cwd to before exec (def no cwd)
autorestart=true               ; whether/when to restart (default: unexpected)
stopasgroup=true             ; send stop signal to the UNIX process group (default false)
killasgroup=true             ; SIGKILL the UNIX process group (def false)
user=root ; setuid to this UNIX account to run the program
stdout_logfile=/data/logs/db_writer/notice_log.txt        ; stdout log path, NONE for none; default AUTO
stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_logfile=/data/logs/db_writer/notice_err.txt        ; stderr log path, NONE for none; default AUTO
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
priority=999                  ; the relative start priority (default 999)

;[program:nebula_sniffer]
;command=/home/threathunter/nebula/scripts/start_nebula_sniffer.sh             ; the program (relative uses PATH, can take args)
;directory=/tmp                ; directory to cwd to before exec (def no cwd)
;autorestart=true               ; whether/when to restart (default: unexpected)
;stopasgroup=true             ; send stop signal to the UNIX process group (default false)
;killasgroup=true             ; SIGKILL the UNIX process group (def false)
;user=root ; setuid to this UNIX account to run the program
;stdout_logfile=/data/logs/sniffer/log.txt        ; stdout log path, NONE for none; default AUTO
;stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stderr_logfile=/data/logs/sniffer/err.txt        ; stderr log path, NONE for none; default AUTO
;stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;priority=999                  ; the relative start priority (default 999)

[program:labrador]
command=/home/threathunter/nebula/labrador/bin/labrador.sh start         ; the program (relative uses PATH, can take args)
directory=/home/threathunter/nebula/labrador/                ; directory to cwd to before exec (def no cwd)
autorestart=true               ; whether/when to restart (default: unexpected)
stopasgroup=true             ; send stop signal to the UNIX process group (default false)
killasgroup=true             ; SIGKILL the UNIX process group (def false)
user=root        ; setuid to this UNIX account to run the program
stdout_logfile=/data/logs/labrador/labrador.log        ; stdout log path, NONE for none; default AUTO
stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_logfile=/data/logs/labrador/err.txt        ; stderr log path, NONE for none; default AUTO
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
priority=999                 ; the relative start priority (default 999)

[program:java_web]
command=/home/threathunter/nebula/java-web/bin/http_bootstrap.sh start         ; the program (relative uses PATH, can take args)
directory=/home/threathunter/nebula/java-web/                ; directory to cwd to before exec (def no cwd)
autorestart=true               ; whether/when to restart (default: unexpected)
stopasgroup=true             ; send stop signal to the UNIX process group (default false)
killasgroup=true             ; SIGKILL the UNIX process group (def false)
user=root        ; setuid to this UNIX account to run the program
stdout_logfile=/data/logs/java-web/java_web.log        ; stdout log path, NONE for none; default AUTO
stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_logfile=/data/logs/java-web/err.txt        ; stderr log path, NONE for none; default AUTO
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
priority=999                 ; the relative start priority (default 999)

;[program:redis]
;command=/home/threathunter/nebula/redis/src/redis-server /home/threathunter/nebula/redis/redis.conf             ; the program (relative uses PATH, can take args)
;directory=/home/threathunter/nebula/redis/src/                ; directory to cwd to before exec (def no cwd)
;autorestart=true               ; whether/when to restart (default: unexpected)
;stopasgroup=true             ; send stop signal to the UNIX process group (default false)
;killasgroup=true             ; SIGKILL the UNIX process group (def false)
;user=root      ; setuid to this UNIX account to run the program
;stdout_logfile=/data/logs/redis/log.txt        ; stdout log path, NONE for none; default AUTO
;stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stderr_logfile=/data/logs/redis/err.txt        ; stderr log path, NONE for none; default AUTO
;stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;priority=970                  ; the relative start priority (default 999)

[program:nginx]
command=/usr/local/openresty/bin/openresty -p nebula_nginx             ; the program (relative uses PATH, can take args)
directory=/home/threathunter/nebula                ; directory to cwd to before exec (def no cwd)
autorestart=true               ; whether/when to restart (default: unexpected)
stopasgroup=true             ; send stop signal to the UNIX process group (default false)
killasgroup=true             ; SIGKILL the UNIX process group (def false)
user=root      ; setuid to this UNIX account to run the program
stdout_logfile=/data/logs/web/access.log        ; stdout log path, NONE for none; default AUTO
stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_logfile=/data/logs/web/access_err.txt        ; stderr log path, NONE for none; default AUTO
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
priority=970                  ; the relative start priority (default 999)


[program:cron]
command=/sbin/crond -n -s            ; the program (relative uses PATH, can take args)
directory=/home/threathunter/                ; directory to cwd to before exec (def no cwd)
autorestart=true               ; whether/when to restart (default: unexpected)
stopasgroup=true             ; send stop signal to the UNIX process group (default false)
killasgroup=true             ; SIGKILL the UNIX process group (def false)
user=root ; setuid to this UNIX account to run the program
stdout_logfile=/data/logs/crond/stdout.log        ; stdout log path, NONE for none; default AUTO
stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_logfile=/data/logs/crond/stderr.log        ; stderr log path, NONE for none; default AUTO
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
priority=970                  ; the relative start priority (default 999)

[inet_http_server]
port=127.0.0.1:8086
username=threathunter
password=threathunter
