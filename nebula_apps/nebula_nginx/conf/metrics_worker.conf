lua_shared_dict metrics 50m;

init_worker_by_lua_block {
    local settings = require("metrics_setting")
    local metrics = require "metrics"
    local timer_delay = settings.flush_interval -- in seconds
    local new_timer = ngx.timer.at
    local ERR = ngx.ERR
    local WARN = ngx.WARN
    local INFO = ngx.INFO
    local log = ngx.log
    local m = metrics:new(settings)
    flush_metrics = function(premature)
        m:flush()
        if not premature then
            local ok, err = new_timer(timer_delay, flush_metrics) -- regist next run
            if ok then
                log(INFO, "next metrics flush job registed.")
            else
                log(ERR, "failed to create timer: ", err)
                return
            end
        end
    end

    if 0 == ngx.worker.id() then
        local ok, err = new_timer(timer_delay, flush_metrics)
        if ok then
            log(INFO, "next metrics flush job registed.")
        else
            log(ERR, "failed to create timer: ", err)
            return
        end
    end   
}    
